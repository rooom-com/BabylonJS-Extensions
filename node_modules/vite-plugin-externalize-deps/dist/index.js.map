{"version":3,"file":"index.js","sources":["../src/index.ts"],"sourcesContent":["import { existsSync, readFileSync } from 'node:fs'\nimport { builtinModules } from 'node:module'\nimport { join } from 'node:path'\nimport type { Plugin } from 'vite'\n\ninterface UserOptions {\n  deps: boolean,\n  devDeps: boolean,\n  except: Array<string | RegExp>,\n  /**\n   * Additional dependencies to externalize.\n   *\n   * @example\n   *\n   * ```ts\n   * externalizeDeps({\n   *   include: [\n   *     /^unlisted-dep(?:\\/.*)?$/,\n   *   ],\n   * })\n   * ```\n   *\n   * @default []\n   */\n  include: Array<string | RegExp>,\n  nodeBuiltins: boolean,\n  optionalDeps: boolean,\n  peerDeps: boolean,\n  useFile: string,\n}\n\nconst parseFile = (file: string) => {\n  return JSON.parse(readFileSync(file).toString())\n}\n\n/**\n * Returns a Vite plugin to exclude dependencies from the bundle.\n *\n * @example\n *\n * ```ts\n * // vite.config.ts\n * import { defineConfig } from 'vite'\n * import { externalizeDeps } from 'vite-plugin-externalize-deps'\n *\n * export default defineConfig({\n *   plugins: [\n *     externalizeDeps({\n *       deps: true,\n *       devDeps: false,\n *       except: [\n *         // Match exact values with strings.\n *         '@some/obscure/dependency',\n *         // Or match patterns with regular expressions.\n *         /^@some\\/obscure(?:\\/.+)?$/,\n *       ],\n *       include: [\n *         // Match exact values with strings.\n *         '@some/obscure/dependency',\n *         // Or match patterns with regular expressions.\n *         /^@some\\/obscure(?:\\/.+)?$/,\n *       ],\n *       nodeBuiltins: true,\n *       optionalDeps: true,\n *       peerDeps: true,\n *       useFile: join(process.cwd(), 'package.json'),\n *     }),\n *   ],\n * })\n * ```\n */\nexport const externalizeDeps = (options: Partial<UserOptions> = {}): Plugin => {\n  const optionsResolved: UserOptions = {\n    deps: true,\n    devDeps: false,\n    except: [],\n    include: [],\n    nodeBuiltins: true,\n    optionalDeps: true,\n    peerDeps: true,\n    useFile: join(process.cwd(), 'package.json'),\n    // User options take priority.\n    ...options,\n  }\n\n  return {\n    name: 'vite-plugin-externalize-deps',\n    config: (_config, _env) => {\n      if (!existsSync(optionsResolved.useFile)) {\n        throw new Error(`[vite-plugin-externalize-deps] The file specified for useFile (${optionsResolved.useFile}) does not exist.`)\n      }\n\n      const externalDeps = new Set<RegExp>()\n      const {\n        dependencies = {},\n        devDependencies = {},\n        optionalDependencies = {},\n        peerDependencies = {},\n      } = parseFile(optionsResolved.useFile)\n\n      if (optionsResolved.deps) {\n        Object.keys(dependencies).forEach((dep) => {\n          const depMatcher = new RegExp(`^${dep}(?:/.+)?$`)\n\n          externalDeps.add(depMatcher)\n        })\n      }\n\n      if (optionsResolved.devDeps) {\n        Object.keys(devDependencies).forEach((dep) => {\n          const depMatcher = new RegExp(`^${dep}(?:/.+)?$`)\n\n          externalDeps.add(depMatcher)\n        })\n      }\n\n      if (optionsResolved.nodeBuiltins) {\n        builtinModules.forEach((builtinModule) => {\n          const builtinMatcher = new RegExp(`^(?:node:)?${builtinModule}$`)\n\n          externalDeps.add(builtinMatcher)\n        })\n      }\n\n      if (optionsResolved.optionalDeps) {\n        Object.keys(optionalDependencies).forEach((dep) => {\n          const depMatcher = new RegExp(`^${dep}(?:/.+)?$`)\n\n          externalDeps.add(depMatcher)\n        })\n      }\n\n      if (optionsResolved.peerDeps) {\n        Object.keys(peerDependencies).forEach((dep) => {\n          const depMatcher = new RegExp(`^${dep}(?:/.+)?$`)\n\n          externalDeps.add(depMatcher)\n        })\n      }\n\n      const depMatchers = Array.from(externalDeps)\n\n      const isException = (id: string) => {\n        return optionsResolved.except.some((exception) => {\n          if (typeof exception === 'string') {\n            return exception === id\n          }\n\n          return exception.test(id)\n        })\n      }\n\n      const isIncluded = (id: string) => {\n        return optionsResolved.include.some((included) => {\n          if (typeof included === 'string') {\n            return included === id\n          }\n\n          return included.test(id)\n        })\n      }\n\n      return {\n        build: {\n          rollupOptions: {\n            external: (id) => {\n              if (isException(id)) {\n                return false\n              }\n\n              if (isIncluded(id)) {\n                return true\n              }\n\n              return depMatchers.some((depMatcher) => depMatcher.test(id))\n            },\n          },\n        },\n      }\n    },\n  }\n}\n"],"names":["parseFile","file","readFileSync","externalizeDeps","options","optionsResolved","join","_config","_env","existsSync","externalDeps","dependencies","devDependencies","optionalDependencies","peerDependencies","dep","depMatcher","builtinModules","builtinModule","builtinMatcher","depMatchers","isException","id","exception","isIncluded","included"],"mappings":";;;AA+BA,MAAMA,IAAY,CAACC,MACV,KAAK,MAAMC,EAAaD,CAAI,EAAE,UAAU,GAuCpCE,IAAkB,CAACC,IAAgC,OAAe;AAC7E,QAAMC,IAA+B;AAAA,IACnC,MAAM;AAAA,IACN,SAAS;AAAA,IACT,QAAQ,CAAC;AAAA,IACT,SAAS,CAAC;AAAA,IACV,cAAc;AAAA,IACd,cAAc;AAAA,IACd,UAAU;AAAA,IACV,SAASC,EAAK,QAAQ,IAAA,GAAO,cAAc;AAAA;AAAA,IAE3C,GAAGF;AAAA,EAAA;AAGE,SAAA;AAAA,IACL,MAAM;AAAA,IACN,QAAQ,CAACG,GAASC,MAAS;AACzB,UAAI,CAACC,EAAWJ,EAAgB,OAAO;AACrC,cAAM,IAAI,MAAM,kEAAkEA,EAAgB,0BAA0B;AAGxH,YAAAK,wBAAmB,OACnB;AAAA,QACJ,cAAAC,IAAe,CAAC;AAAA,QAChB,iBAAAC,IAAkB,CAAC;AAAA,QACnB,sBAAAC,IAAuB,CAAC;AAAA,QACxB,kBAAAC,IAAmB,CAAC;AAAA,MAAA,IAClBd,EAAUK,EAAgB,OAAO;AAErC,MAAIA,EAAgB,QAClB,OAAO,KAAKM,CAAY,EAAE,QAAQ,CAACI,MAAQ;AACzC,cAAMC,IAAa,IAAI,OAAO,IAAID,YAAc;AAEhD,QAAAL,EAAa,IAAIM,CAAU;AAAA,MAAA,CAC5B,GAGCX,EAAgB,WAClB,OAAO,KAAKO,CAAe,EAAE,QAAQ,CAACG,MAAQ;AAC5C,cAAMC,IAAa,IAAI,OAAO,IAAID,YAAc;AAEhD,QAAAL,EAAa,IAAIM,CAAU;AAAA,MAAA,CAC5B,GAGCX,EAAgB,gBACHY,EAAA,QAAQ,CAACC,MAAkB;AACxC,cAAMC,IAAiB,IAAI,OAAO,cAAcD,IAAgB;AAEhE,QAAAR,EAAa,IAAIS,CAAc;AAAA,MAAA,CAChC,GAGCd,EAAgB,gBAClB,OAAO,KAAKQ,CAAoB,EAAE,QAAQ,CAACE,MAAQ;AACjD,cAAMC,IAAa,IAAI,OAAO,IAAID,YAAc;AAEhD,QAAAL,EAAa,IAAIM,CAAU;AAAA,MAAA,CAC5B,GAGCX,EAAgB,YAClB,OAAO,KAAKS,CAAgB,EAAE,QAAQ,CAACC,MAAQ;AAC7C,cAAMC,IAAa,IAAI,OAAO,IAAID,YAAc;AAEhD,QAAAL,EAAa,IAAIM,CAAU;AAAA,MAAA,CAC5B;AAGG,YAAAI,IAAc,MAAM,KAAKV,CAAY,GAErCW,IAAc,CAACC,MACZjB,EAAgB,OAAO,KAAK,CAACkB,MAC9B,OAAOA,KAAc,WAChBA,MAAcD,IAGhBC,EAAU,KAAKD,CAAE,CACzB,GAGGE,IAAa,CAACF,MACXjB,EAAgB,QAAQ,KAAK,CAACoB,MAC/B,OAAOA,KAAa,WACfA,MAAaH,IAGfG,EAAS,KAAKH,CAAE,CACxB;AAGI,aAAA;AAAA,QACL,OAAO;AAAA,UACL,eAAe;AAAA,YACb,UAAU,CAACA,MACLD,EAAYC,CAAE,IACT,KAGLE,EAAWF,CAAE,IACR,KAGFF,EAAY,KAAK,CAACJ,MAAeA,EAAW,KAAKM,CAAE,CAAC;AAAA,UAE/D;AAAA,QACF;AAAA,MAAA;AAAA,IAEJ;AAAA,EAAA;AAEJ;"}